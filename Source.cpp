/*
Файл: Practica.cpp
Летняя практика №1 2021
Автор: Проценко Е.С.
Дата создания: 30.06.2021
Задача №35
*/
// подключение заголовочного файла с нужными библиотеками и прототипами функций
#include "Header.h"
int main()
{
	//смена языка в консоли
	setlocale(LC_ALL, "Rus");
	printf("Програма створюе масив з 900 елементiв та заповнюе його випадковими числами з дiапозону 100...999\nта знаходить числа з дiапозону якi не сгeнерувалися.\n");
	//Объявление переменных
	int A[N], AA[N]; //массивы целых чисел с размерностью N
	int n, p; // счетчики(n-выбор действия в switch; р-счетчик для вывода массива)
	int y, u;// счетчики(r-счетчик прохождения по массиву(0-899), t-весь диапозон чисел(100-999), y-счетчик вывода массива, u-количество элементов массива АА, которые нужно вывести) 
	//вызов функции(заполнение массива случайными числами)
	randomgen(A);
	printf("Вивести заповнений масив?\n1.Так\n2.Нi\n3.Hi(Вивести вiдсортований масив)\n");
	if ((scanf("%d", &n)) == 0)
	{
		printf("Такого варiанту немає");
		return 1;
	}
	if (n > 3 || n < 1)
	{
		printf("Такого варiанту немає");
		return 1;
	}
	switch (n)
	{
	case 1:
	{
		//цикл вывода массив
		for (p = 1; p <= N; p++)
		{
			printf("%d ", A[p - 1]);
			if (p % 30 == 0)
				printf("\n");
		}
		break;
	}
	case 2:
	{
		break;
	}
	case 3:
	{
		//вызов функции(быстрая сортировка(по возрастанию))
		quicksort(A, 0, N - 1);
		//вывод массива
		for (p = 1; p <= N; p++)
		{
			printf("%d ", A[p - 1]);
			if (p % 30 == 0)
				printf("\n");
		}
		break;
	}
	}
	//вызов функции(быстрая сортировка(по возрастанию))
	quicksort(A, 0, N - 1);
	//предложение вывести отсортированный массив, если в прошлый раз вы выбрали пункт 1 или 2
	if (n == 1 || n == 2)
	{
		printf("Вивести вiдсортований масив?\n1.Так\n2.Hi\n");
		if ((scanf("%d", &n)) == 0)
		{
			printf("Такого варiанту немає");
			return 1;
		}
		if (n > 2 || n < 1)
		{
			printf("Такого варiанту немає");
			return 1;
		}
		switch (n)
		{
		case 1:
		{
			for (p = 1; p <= N; p++)
			{
				printf("%d ", A[p - 1]);
				if (p % 30 == 0)
					printf("\n");
			}
			break;
		}
		case 2: {break; }
		}
	}
	printf("\n");
	y = proxod(A, AA);
	u = y;
	// цикл для вывода нужного количества элементов массива АА
	printf("Числа якi не сгенерувалися\n\n");
	for (y = 1; y <= u; y++)
	{
		printf("%d ", AA[y - 1]);
		if (y % 30 == 0)
			printf("\n");
	}
	//завершение работы
	return 0;
}